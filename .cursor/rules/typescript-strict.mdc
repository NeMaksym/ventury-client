---
description: TypeScript best practices
globs: **/*.ts,**/*.tsx
alwaysApply: false
---

- Use explicit types for all variables, function parameters, and return values. Avoid `any` unless absolutely necessary.
- Use interfaces or type aliases for defining object shapes.
- Prefer `type` for simple types and `interface` for objects and classes that might be extended.
- Enable and adhere to strict mode compiler options in `tsconfig.json` (e.g., `strictNullChecks`, `noImplicitAny`).
- Use `readonly` for properties that should not be modified after initialization.
- Use enums for sets of named constants.
- Organize imports: group them and sort them alphabetically.
- Remove unused imports, variables, and functions. 